workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - when: always


stages:
  - lint
  - page_checks
  - location_test


lint:
  stage: lint
  image: python:3.8
  rules:
    - if: $CI_PIPELINE_SOURCE == "web" || $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - when: on_success
  script:
    - apt-get update; apt-get -y install python3-pip
    - pip install tox
    - tox -e lint

.setup-env: &setup-env
    - apt-get update
    - apt-get install -y unzip curl software-properties-common  vim git python3-pip python3
    - curl https://dl-ssl.google.com/linux/linux_signing_key.pub -o /tmp/google.pub
    - cat /tmp/google.pub | apt-key add -
    - echo 'deb http://dl.google.com/linux/chrome/deb/ stable main' > /etc/apt/sources.list.d/google.list
    - mkdir -p /usr/share/desktop-directories
    - wget --no-verbose -O /tmp/chrome.deb http://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/google-chrome-stable_94.0.4606.81-1_amd64.deb && apt install -y /tmp/chrome.deb && rm /tmp/chrome.deb
    - dpkg-divert --add --rename --divert /opt/google/chrome/google-chrome.real /opt/google/chrome/google-chrome
    - echo -e "#!/bin/bash\nexec /opt/google/chrome/google-chrome.real --no-sandbox --disable-setuid-sandbox \"\$@\"" > /opt/google/chrome/google-chrome
    - chmod 755 /opt/google/chrome/google-chrome
    - google-chrome --version
    - wget https://chromedriver.storage.googleapis.com/94.0.4606.113/chromedriver_linux64.zip && unzip chromedriver_linux64.zip
    - export PATH=`pwd`:${PATH}
    - pip install -r requirements.txt
    - pip install -i https://bbpteam.epfl.ch/repository/devpi/simple .

check_ngvviewer:
  stage: page_checks
  rules:
    - if: $PIPELINE_SELECT == "daily"
    - if: $PIPELINE_SELECT == $CI_JOB_NAME
  image: python:3.8-buster
  script:
    - *setup-env
    - NGVViewerStatus=`curl -s https://bbp.epfl.ch/ngv-viewer/status`
    - if [ "$NGVViewerStatus" = "Status OK" ]; then
    -   'echo "NGV Viewer seems to work normally."'
    - else
    -   'echo "NGV Viewer seems to have a problem! $NGVViewerStatus"'
    -   'slack_reporter --ok_url $SLACK_LINK_OK --err_url $SLACK_LINK_NOK --name "NGV Viewer Check" --message "Error: $NGVViewerStatus" --status 1'
    - fi

check_pages_sscx:
  stage: page_checks
  rules:
    - if: $PIPELINE_SELECT == "weekly"
    - if: $PIPELINE_SELECT == $CI_JOB_NAME
  image: python:3.8-buster
  script:
    - *setup-env
    - exit_code=0
    - pagechecker  --folder resources/SSCX_Portal/  --domain "https://bbp.epfl.ch/sscx-portal/" -H "Authorization:Basic c3NjeDphZXc0b29TaA==" -n 5 || exit_code=1
    - slack_reporter --ok_url $SLACK_LINK_OK --err_url $SLACK_LINK_NOK --name "SSCX Page Check" --filename pagechecker.log --status $exit_code

check_pages_hippo:
  stage: page_checks
  rules:
    - if: $PIPELINE_SELECT == "weekly"
    - if: $PIPELINE_SELECT == $CI_JOB_NAME
  image: python:3.8-buster
  script:
    - *setup-env
    - exit_code=0
    - pagechecker  --folder resources/HIPPO_Portal/  --domain "https://www.hippocampushub.eu" -n 5 || exit_code=1
    - slack_reporter --ok_url $SLACK_LINK_OK --err_url $SLACK_LINK_NOK --name "HIPPO Page Check" --filename pagechecker.log --status $exit_code

check_pages_nmc:
  stage: page_checks
  rules:
    - if: $PIPELINE_SELECT == "daily"
    - if: $PIPELINE_SELECT == $CI_JOB_NAME
  image: python:3.8-buster
  script:
    - *setup-env
    - exit_code=0
    - pagechecker  --folder resources/NMC_Portal/  --domain "https://bbp.epfl.ch/nmc-portal/microcircuit.html#" -n 5 || exit_code=1
    - slack_reporter --ok_url $SLACK_LINK_OK --err_url $SLACK_LINK_NOK --name "NMC Page Check" --filename pagechecker.log --status $exit_code

check_dom_sscx:
  stage: page_checks
  timeout: 2 hours
  rules:
    - if: $PIPELINE_SELECT == "daily_even"
    - if: $PIPELINE_SELECT == $CI_JOB_NAME
  image: python:3.8-buster
  script:
    - *setup-env
    - mkdir -p screenshots
    - exit_code=0
    - page_dom_check -n 20 -p resources/SSCX_Portal/sscx_dom_check.json -d http://sscx-portal.ocp.bbp.epfl.ch/sscx-portal  || exit_code=1
    - slack_reporter --ok_url $SLACK_LINK_OK --err_url $SLACK_LINK_NOK --name "SSCX Dom Check" --filename page_dom_check.log --status $exit_code
  artifacts:
    paths:
      - screenshots

check_dom_hippo:
  stage: page_checks
  rules:
    - if: $PIPELINE_SELECT == "daily_even"
    - if: $PIPELINE_SELECT == $CI_JOB_NAME
  image: python:3.8-buster
  script:
    - *setup-env
    - mkdir -p screenshots
    - exit_code=0
    - page_dom_check -n 5 -p resources/HIPPO_Portal/hippo_dom_check.json -d https://www.hippocampushub.eu --screenshots  || exit_code=1
    - slack_reporter --ok_url $SLACK_LINK_OK --err_url $SLACK_LINK_NOK --name "HIPPO Dom Check" --filename page_dom_check.log --status $exit_code

check_dom_ngv:
  stage: page_checks
  rules:
    - if: $PIPELINE_SELECT == "daily_even"
    - if: $PIPELINE_SELECT == $CI_JOB_NAME
  image: python:3.8-buster
  script:
    - *setup-env
    - mkdir -p screenshots
    - exit_code=0
    - page_dom_check -n 3 -p resources/NGV_Portal/ngv_dom_check.json -d http://ngv-portal.ocp.bbp.epfl.ch/ngv-portal --screenshots  || exit_code=1
    - slack_reporter --ok_url $SLACK_LINK_OK --err_url $SLACK_LINK_NOK --name "NGV Dom Check" --filename page_dom_check.log --status $exit_code

check_links:
  stage: page_checks
  rules:
    - if: $PIPELINE_SELECT == "weekly"
    - if: $PIPELINE_SELECT == $CI_JOB_NAME
  image: python:3.8-buster
  variables:
    page: "https://portal.bluebrain.epfl.ch/"
  script:
    # Install required packages
    - pip install beautifulsoup4 pylinkvalidator click requests
    - pip install -i https://bbpteam.epfl.ch/repository/devpi/simple .
    - export http_proxy=http://bbpproxy.epfl.ch:80/
    - export https_proxy=http://bbpproxy.epfl.ch:80/
    - export no_proxy="localhost,127.0.0.1,localaddress,.localdomain.com"
    # perform the check
    - exit_code=0
    - pylinkvalidate.py -d 0 -o linkreport.txt -P $page || exit_code=$?
    # and create the report to slack
    - python validate_converter.py linkreport.txt > report.txt
    - slack_reporter --ok_url $SLACK_LINK_OK --err_url $SLACK_LINK_NOK --name "BBP Portal Links" --filename report.txt --status $exit_code

location_testing_sscx:
  stage: location_test
  rules:
    - if: $PIPELINE_SELECT == "daily_odd"
    - if: $PIPELINE_SELECT == $CI_JOB_NAME
  image: python:3.8-buster
  script:
    - pip install click requests
    - pip install -i https://bbpteam.epfl.ch/repository/devpi/simple .
    - location_test -p resources/perf_sscx.json --portal sscx

location_testing_hippo:
  stage: location_test
  rules:
    - if: $PIPELINE_SELECT == "daily_even"
    - if: $PIPELINE_SELECT == $CI_JOB_NAME
  image: python:3.8-buster
  script:
    - pip install click requests
    - pip install -i https://bbpteam.epfl.ch/repository/devpi/simple .
    - location_test -p resources/perf_hippo.json --portal hippo

check_mooc:
  stage: page_checks
  rules:
    - if: $PIPELINE_SELECT == "mooc"
    - if: $PIPELINE_SELECT == $CI_JOB_NAME
  image: bbpgitlab.epfl.ch:5050/nse/repo-checker-group/check-pages
  script:
    - pip install -r requirements.txt
    - pip install -i https://bbpteam.epfl.ch/repository/devpi/simple .
    - export http_proxy=http://bbpproxy.epfl.ch:80/
    - export https_proxy=http://bbpproxy.epfl.ch:80/
    - export no_proxy="localhost,127.0.0.1,localaddress,.localdomain.com"
    - mkdir debug
    - exit_code=0
    - py.test -s check_pages/mooc_tests.py --tests resources/Mooc/mooc_tests.json --headless || exit_code=1
    - cat service_results.txt
    - slack_reporter --ok_url $SLACK_LINK_OK --err_url $SLACK_LINK_NOK --name "MOOC Check" --filename service_results.txt --status $exit_code
  artifacts:
    paths:
      - debug
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - SIMUI_CA1.INFO
      - SIMUI_MICRO.INFO
      - SIMUI.INFO
      - PSPAPP.INFO

check_ebrains:
  stage: page_checks
  rules:
    - if: $PIPELINE_SELECT == "ebrains"
    - if: $PIPELINE_SELECT == $CI_JOB_NAME
  image: bbpgitlab.epfl.ch:5050/nse/repo-checker-group/check-pages
  script:
    - pip install -r requirements.txt
    - pip install -i https://bbpteam.epfl.ch/repository/devpi/simple .
    - export http_proxy=http://bbpproxy.epfl.ch:80/
    - export https_proxy=http://bbpproxy.epfl.ch:80/
    - export no_proxy="localhost,127.0.0.1,localaddress,.localdomain.com"
    - mkdir debug
    - ls -ltr
    - exit_code=0
    - py.test -s check_pages/ebrains_tests.py --headless || exit_code=1
    - cat service_results.txt
    - ls -ltr
    - slack_reporter --ok_url $SLACK_LINK_OK --err_url $SLACK_LINK_NOK --name "EBRAINS Check" --filename service_results.txt --status $exit_code
  artifacts:
    paths:
      - debug
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - SIMUI_CA1.INFO
      - SIMUI_MICRO.INFO
      - SIMUI.INFO
      - PSPAPP.INFO
